import json
import requests
import pandas as pd

state = ['MA', 'CA', 'CA', 'CA', 'CA', 'AK', 'MI', 'WI', 'NC', 'WA', 'CO', 'IL', 'TX', 'AZ', 'OR', 'WA', 'OR', 'CA', 'MT', 'IL', 'FL', 'ID', 'MA', 'OK', 'MN', 'CA', 'CA', 'VT', 'FL', 'TX', 'CA', 'IA', 'NC', 'NC', 'VA', 'WY', 'CA', 'CA', 'CA', 'CA', 'NJ', 'CA', 'TX', 'CO', 'MO', 'NC', 'CA', 'NC', 'CA', 'CA', 'RI', 'CT', 'IA', 'FL', 'TX', 'CO', 'CA', 'MN', 'NC', 'OK', 'IL', 'CA', 'OR', 'IL', 'CA', 'ND', 'WA', 'CA', 'CA', 'CA', 'TX', 'CA', 'TX', 'WI', 'CA', 'NV', 'OR', 'CA', 'AL', 'TX', 'NC', 'IL', 'WA', 'CA', 'UT', 'TX', 'NE', 'MI', 'CO', 'WI', 'NH', 'CA', 'CA', 'ID', 'AZ', 'TX', 'MN', 'FL', 'MT', 'TX', 'CA', 'NH', 'NY', 'OK', 'CT', 'CA', 'CA', 'UT', 'FL', 'OH', 'CA', 'FL', 'AZ', 'FL', 'FL', 'ME', 'OR', 'UT', 'MA', 'NC', 'CA', 'WA', 'NM', 'OR', 'UT', 'CA', 'CA', 'CA', 'CA', 'CA', 'CA', 'CA', 'NM', 'CA', 'CA', 'WA', 'IA', 'SD', 'WA', 'UT', 'MI', 'VA', 'FL', 'AZ', 'AZ', 'CO', 'CA', 'CA', 'HI', 'CA', 'WA', 'CA', 'RI', 'WI', 'CA', 'UT', 'CA', 'CO', 'NY', 'CA', 'VA', 'TX', 'IL', 'CO', 'WA', 'MN', 'IL', 'CO', 'MA', 'CA', 'IN', 'NC', 'CO', 'AZ', 'CA', 'FL', 'CA', 'CA', 'MI', 'IN', 'CA', 'CO', 'CA', 'TX', 'AZ', 'AL', 'IA', 'CA', 'GA', 'CA', 'CO', 'KS', 'TX', 'MO', 'CA', 'CO', 'TX', 'CA', 'CA', 'NC', 'CA', 'CA', 'IL', 'CA', 'MO', 'KS', 'KS', 'IL', 'TX', 'TX', 'MN', 'CA', 'CA', 'TX', 'MN', 'MI', 'CA', 'GA', 'TX', 'CA', 'UT', 'GA', 'CA', 'CA', 'IL', 'AZ', 'CA', 'MA', 'CT', 'TX', 'CA', 'CA', 'CA', 'CA', 'MI', 'CA', 'CA', 'VA', 'UT', 'OH', 'GA', 'PA', 'MD', 'LA', 'TX', 'AL', 'NY', 'NJ', 'OH', 'WV', 'OH', 'OH', 'CA', 'OH', 'IN', 'MS', 'IN', 'CT', 'CA', 'MS', 'TN', 'LA', 'MI', 'FL', 'TN', 'AL', 'LA', 'NJ', 'PA', 'PA', 'NY', 'IL', 'CA', 'LA', 'IN', 'MA', 'MO', 'MO', 'CA', 'NY', 'OH', 'NJ', 'CT', 'DE', 'OH', 'TX', 'NY', 'NM', 'TX', 'CA', 'CA', 'TX', 'GA', 'GA', 'GA', 'CA', 'CA', 'TX', 'CA', 'PA', 'IN', 'FL', 'CT', 'MA', 'TX', 'TX', 'IL', 'TN', 'IL', 'IL', 'TN', 'FL', 'GA', 'OH', 'TX', 'TX', 'MI', 'IL', 'FL', 'FL', 'IA', 'TX', 'CA', 'CA', 'TX', 'NJ', 'PA', 'WA', 'MA', 'AR', 'NC', 'FL', 'AR', 'IN', 'TX', 'CA', 'FL', 'NC', 'AZ', 'MI', 'CO', 'NC', 'NC', 'OR', 'VA', 'CA', 'CA', 'FL', 'NC', 'FL', 'TX', 'MO', 'IN', 'CA', 'CA', 'FL', 'NJ', 'AR', 'MI', 'KS', 'MO', 'LA', 'WA', 'WI', 'TX', 'IN', 'LA', 'FL', 'CA', 'TX', 'FL', 'NM', 'NV', 'MA', 'OK', 'KY', 'AR', 'CA', 'TX', 'CA', 'KY', 'MA', 'TX', 'VA', 'MA', 'CA', 'GA', 'TX', 'OR', 'FL', 'CA', 'TX', 'FL', 'FL', 'FL', 'WI', 'TX', 'CA', 'AL', 'CA', 'NY', 'IN', 'TN', 'ID', 'TN', 'MA', 'CT', 'CT', 'NY', 'VA', 'VA', 'NC', 'NV', 'CA', 'CA', 'TX', 'UT', 'OK', 'NE', 'CA', 'FL', 'CA', 'TX', 'NJ', 'NJ', 'RI', 'IL', 'CA', 'TX', 'AZ', 'PA', 'CA', 'FL', 'VA', 'RI', 'CO', 'WI', 'SD', 'CA', 'CA', 'NV', 'CA', 'CA', 'VA', 'CA', 'VA', 'NC', 'CA', 'CA', 'TX', 'TX', 'CA', 'CA', 'GA', 'NY', 'PA', 'CA', 'MI', 'NV', 'WA', 'AR', 'IL', 'MO', 'MN', 'FL', 'WA', 'FL', 'FL', 'KS', 'AZ', 'OK', 'CA', 'AL', 'TX', 'NJ', 'CA', 'CA', 'CA', 'TX', 'GA', 'MI', 'DC', 'IA', 'IL', 'FL', 'MI', 'CA', 'KS', 'TX', 'NC', 'NC', 'MA', 'MI', 'WA', 'AZ', 'MI', 'MI', 'IN']
city = ['Newton', 'Pleasanton', 'San Ramon', 'Alhambra', 'Anaheim', 'Anchorage', 'Ann Arbor', 'Appleton', 'Asheville', 'Auburn', 'Aurora', 'Aurora', 'Austin', 'Avondale', 'Beaverton', 'Bellingham', 'Bend', 'Berkeley', 'Billings', 'Bloomington', 'Boca Raton', 'Boise City', 'Boston', 'Broken Arrow', 'Brooklyn Park', 'Buena Park', 'Burbank', 'Burlington', 'Cape Coral', 'Carrollton', 'Carson', 'Cedar Rapids', 'Charleston', 'Charlotte', 'Chesapeake', 'Cheyenne', 'Chico', 'Chino', 'Chula Vista', 'Citrus Heights', 'Clifton', 'Clovis', 'College Station', 'Colorado Springs', 'Columbia', 'Columbia', 'Concord', 'Concord', 'Corona', 'Costa Mesa', 'Cranston', 'Danbury', 'Davenport', 'Davie', 'Denton', 'Denver', 'Downey', 'Duluth', 'Durham', 'Edmond', 'Elgin', 'Escondido', 'Eugene', 'Evanston', 'Fairfield', 'Fargo', 'Federal Way', 'Fontana', 'Fullerton', 'Garden Grove', 'Garland', 'Glendale', 'Grand Prairie', 'Green Bay', 'Hayward', 'Henderson', 'Hillsboro', 'Huntington Beach', 'Huntsville', 'Irving', 'Jacksonville', 'Joliet', 'Kent', 'Lakewood', 'Layton', 'Lewisville', 'Lincoln', 'Livonia', 'Longmont', 'Madison', 'Manchester', 'Manteca', 'Menifee', 'Meridian', 'Mesa', 'Midland', 'Minneapolis', 'Miramar', 'Missoula', 'Missouri City', 'Napa', 'Nashua', 'New Rochelle', 'Norman', 'Norwalk', 'Oceanside', 'Orange', 'Orem', 'Palm Coast', 'Parma', 'Pasadena', 'Pembroke Pines', 'Peoria', 'Plantation', 'Port St. Lucie', 'Portland', 'Portland', 'Provo', 'Quincy', 'Raleigh', 'Rancho Cucamonga', 'Renton', 'Rio Rancho', 'Salem', 'Salt Lake City', 'San Buenaventura', 'San Diego', 'San Francisco', 'San Jose', 'San Leandro', 'San Marcos', 'Santa Barbara', 'Santa Fe', 'Santa Monica', 'Santa Rosa', 'Seattle', 'Sioux City', 'Sioux Falls', 'Spokane Valley', 'St. George', 'Sterling Heights', 'Suffolk', 'Sunrise', 'Surprise', 'Tempe', 'Thornton', 'Tracy', 'Upland', 'Honolulu', 'Vacaville', 'Vancouver', 'Vista', 'Warwick', 'Waukesha', 'West Covina', 'West Valley City', 'Westminster', 'Westminster', 'Yonkers', 'Alameda', 'Alexandria', 'Allen', 'Arlington Heights', 'Arvada', 'Bellevue', 'Bloomington', 'Bolingbrook', 'Boulder', 'Cambridge', 'Carlsbad', 'Carmel', 'Cary', 'Centennial', 'Chandler', 'Chino Hills', 'Coral Springs', 'Daly City', 'Elk Grove', 'Farmington Hills', 'Fishers', 'Folsom', 'Fort Collins', 'Fremont', 'Frisco', 'Gilbert', 'Hoover', 'Iowa City', 'Irvine', 'Johns Creek', 'Lake Forest', 'Lakewood', 'Lawrence', 'League City', "Lee's Summit", 'Livermore', 'Loveland', 'McKinney', 'Milpitas', 'Mission Viejo', 'Mount Pleasant', 'Mountain View', 'Murrieta', 'Naperville', 'Newport Beach', "O'Fallon", 'Olathe', 'Overland Park', 'Palatine', 'Pearland', 'Plano', 'Plymouth', 'Redondo Beach', 'Redwood City', 'Richardson', 'Rochester', 'Rochester Hills', 'Roseville', 'Roswell', 'Round Rock', 'San Mateo', 'Sandy', 'Sandy Springs', 'Santa Clara', 'Santa Clarita', 'Schaumburg', 'Scottsdale', 'Simi Valley', 'Somerville', 'Stamford', 'Sugar Land', 'Sunnyvale', 'Temecula', 'Thousand Oaks', 'Torrance', 'Troy', 'Tustin', 'Union City', 'Virginia Beach', 'West Jordan', 'Akron', 'Albany', 'Allentown', 'Baltimore', 'Baton Rouge', 'Beaumont', 'Birmingham', 'Buffalo', 'Camden', 'Canton', 'Charleston', 'Cincinnati', 'Cleveland', 'Compton', 'Dayton', 'Evansville', 'Gulfport', 'Hammond', 'Hartford', 'Hemet', 'Jackson', 'Knoxville', 'Lake Charles', 'Lansing', 'Lauderhill', 'Memphis', 'Mobile', 'New Orleans', 'Newark', 'Philadelphia', 'Reading', 'Rochester', 'Rockford', 'San Bernardino', 'Shreveport', 'South Bend', 'Springfield', 'Springfield', 'St. Louis', 'Stockton', 'Syracuse', 'Toledo', 'Trenton', 'Waterbury', 'Wilmington', 'Youngstown', 'Abilene', 'Albany', 'Albuquerque', 'Amarillo', 'Antioch', 'Apple Valley', 'Arlington', 'Athens', 'Atlanta', 'Augusta', 'Bakersfield', 'Baldwin Park', 'Baytown', 'Bellflower', 'Bethlehem', 'Bloomington', 'Boynton Beach', 'Bridgeport', 'Brockton', 'Brownsville', 'Bryan', 'Champaign', 'Chattanooga', 'Chicago', 'Cicero', 'Clarksville', 'Clearwater', 'Columbus', 'Columbus', 'Corpus Christi', 'Dallas', 'Dearborn', 'Decatur', 'Deerfield Beach', 'Deltona', 'Des Moines', 'Edinburg', 'El Cajon', 'El Monte', 'El Paso', 'Elizabeth', 'Erie', 'Everett', 'Fall River', 'Fayetteville', 'Fayetteville', 'Fort Lauderdale', 'Fort Smith', 'Fort Wayne', 'Fort WorthFresno', 'Gainesville', 'Gastonia', 'Glendale', 'Grand Rapids', 'Greeley', 'Greensboro', 'Greenville', 'Gresham', 'Hampton', 'Hawthorne', 'Hesperia', 'Hialeah', 'High Point', 'Hollywood', 'Houston', 'Independence', 'Indianapolis', 'Indio', 'Inglewood', 'Jacksonville', 'Jersey City', 'Jonesboro', 'Kalamazoo', 'Kansas City', 'Kansas City', 'Kenner', 'Kennewick', 'Kenosha', 'Killeen', 'Lafayette', 'Lafayette', 'Lakeland', 'Lancaster', 'Laredo', 'Largo', 'Las Cruces', 'Las Vegas', 'Lawrence', 'Lawton', 'Lexington', 'Little Rock', 'Long Beach', 'Longview', 'Los Angeles', 'Louisville', 'Lowell', 'Lubbock', 'Lynchburg', 'Lynn', 'Lynwood', 'Macon', 'Medford', 'Melbourne', 'Merced', 'Mesquite', 'Miami Beach', 'Miami', 'Miami Gardens', 'Milwaukee', 'Mission', 'Modesto', 'Montgomery', 'Moreno Valley', 'Mount Vernon', 'Muncie', 'Murfreesboro', 'Nampa', 'Nashville', 'New Bedford', 'New Britain', 'New Haven', 'New York', 'Newport News', 'Norfolk', 'North Charleston', 'North Las Vegas', 'Norwalk', 'Oakland', 'Odessa', 'Ogden', 'Oklahoma City', 'Omaha', 'Ontario', 'Orlando', 'Oxnard', 'Palm Bay', 'Palmdale', 'Pasadena', 'Passaic', 'Paterson', 'Pawtucket', 'Peoria', 'Perris', 'Pharr', 'Phoenix', 'Pittsburgh', 'Pomona', 'Pompano Beach', 'Portsmouth', 'Providence', 'Pueblo', 'Racine', 'Rapid City', 'Redding', 'Redlands', 'Reno', 'Rialto', 'Richmond', 'Richmond', 'Riverside', 'Roanoke', 'Rock Hill', 'Sacramento', 'Salinas', 'San Angelo', 'San Antonio', 'Santa Ana', 'Santa Maria', 'Savannah', 'Schenectady', 'Scranton', 'South Gate', 'Southfield', 'Sparks', 'Spokane', 'Springdale', 'Springfield', 'St. Joseph', 'St. Paul', 'St. Petersburg', 'Tacoma', 'Tallahassee', 'Tampa', 'Topeka', 'Tucson', 'Tulsa', 'Turlock', 'Tuscaloosa', 'Tyler', 'Union City', 'Vallejo', 'Victorville', 'Visalia', 'Waco', 'Warner Robins', 'Warren', 'Washington', 'Waterloo', 'Waukegan', 'West Palm Beach', 'Westland', 'Whittier', 'Wichita', 'Wichita Falls', 'Wilmington', 'Winston-Salem', 'Worcester', 'Wyoming', 'Yakima', 'Yuma', 'Detroit', 'Flint', 'Gary']

DEMO_KEY = "0d1DOqWIVQH4RzQA3BLsvj3lsdfLmlemsHbIg6Ru"

df_prin = pd.DataFrame({"avg":[""]})

def cidade_atual(cidade, estado):
  vetor = []
  for i in range(6):
    vetor.append(f"{cidade} - {estado}")
  return vetor

for i in range(len(city)):
  try:
      url = f"https://developer.nrel.gov/api/cleap/v1/cities?city={city[i]}&state_abbr={state[i]}&api_key={DEMO_KEY}"
      base = requests.get(url)
      df = pd.DataFrame(base)
      df.columns = ["coluna1"]
      coluna = df.loc[1, 'coluna1']
      coluna = str(coluna)
      var = coluna.split(",")
      var2 = var[2].split('"')
      gisjoin = var2[3]
      url_energia = f"https://developer.nrel.gov/api/cleap/v1/energy_cohort_data/{gisjoin}?api_key={DEMO_KEY}"
      base_energia = requests.get(url_energia)
      json_obj = json.loads(base_energia.text)
      resultado = json_obj['result']
      similar_places = resultado['similar_places']
      table = similar_places['table']
      df_result = pd.DataFrame(table)
      df_result_final = pd.DataFrame([df_result['commercial_gas_use'], df_result['industrial_gas_use'], df_result['residential_gas_use'], df_result['commercial_electric_use'], df_result['industrial_electric_use'], df_result['residential_electric_use']])
      cidade = cidade_atual(city[i], state[i])
      df_result_final['cidade'] = cidade
      df_result_final = df_result_final.drop(columns=['min', 'max'])
      df_prin = pd.concat([df_prin, df_result_final])
      df_prin.to_csv(r"C:\Users\Lucas Bergamin\Desktop\Brigth cities\WebScraping\dadosEnergiaEua.csv")
      print(df_prin)
  except:
      print()

df_prin.to_csv(r"C:\Users\Lucas Bergamin\Desktop\Brigth cities\WebScraping\dadosEnergiaEua.csv")